getwd()
DAT_DIR <- "../outputs/"
robout_files <- list.files(DAT_DIR, pattern = "_robustness.csv")
getwd()
robout_files <- list.files(DAT_DIR, pattern = "_Robustness.csv")
sites_names <- strsplit(robout_files, "_")
sites_names <- strsplit(robout_files, "_"); sites_names <- unlist(sapply(sites_names, "[[", 1))
robout_files
sites_names <- strsplit(robout_files, "_Robustness.csv")
sites_names
DAT_DIR <- "../outputs/"
robout_files <- list.files(DAT_DIR, pattern = "_Robustness.csv")
sites_names <- unlist(strsplit(robout_files, "_Robustness.csv"))
sites_names
site <- sites_names[1]
output_site <- read.csv(file = paste0(DAT_DIR, site, "_Robustness.csv"))
head(output_site)
unique(output_site$ExtThrs)
unique(output_site$FlexThrs)
ext_thrs <- c(0.25, 0.5, 0.75); flex_thrs <- c(0, 0.25, 0.5, 1)
rob_scenario <- rbind(rob_scenario, c("RMComm", "RLComm", "RRand"))
rob_scenario <- c("most to least common", "least to most common", "random")
rob_scenario <- rbind(rob_scenario, c("RMComm", "RLComm", "RRand"))
rob_scenario
rob_scenario <- dataframe(scenario = c("most to least common", "least to most common", "random"),
abbrev = c("RMComm", "RLComm", "RRand"))
rob_scenario <- data.frame(scenario = c("most to least common", "least to most common", "random"),
abbrev = c("RMComm", "RLComm", "RRand"))
rob_scenario
head(output_site)
s
s = 1
output_site[, rob_scenario$abbrev[s]]
s
rob_scenario$abbrev[s]
head(output_site)
output_site[, rob_scenario$abbrev[s]]
head(output_site)
output_site[, character(rob_scenario$abbrev[s])]
character(rob_scenario$abbrev[s])
as.character(rob_scenario$abbrev[s])
output_site[, rob_scenario$abbrev[s]]
output_site[, as.character(rob_scenario$abbrev[s])]
head(output_site[, as.character(rob_scenario$abbrev[s])])
head(output_site)
ext_thrs <- unique(output_site$ExtThrs); flex_thrs <- unique(output_site$FlexThrs)
for (ext in ext_thrs){
for (flex in flex_thrs){
index_extflex <- (output_site$ExtThrs == ext) & (output_site$FlexThrs == flex)
for (s in 1:nrow(rob_scenario)){
output_site_case <- data.frame(site = site, MDT = output_site$MDT[1], scenario = rob_scenario$scenario[s],
extthrs = ext, flexthrs = flex, meanrob = NA, sdrob = NA)
meanrob_case <- mean(output_site[index_extflex, as.character(rob_scenario$abbrev[s])])
sdrob_case <- sd(output_site[index_extflex, as.character(rob_scenario$abbrev[s])])
output_site_case$meanrob <- meanrob_case
output_site_case$sdrob <- sdrob_case
allsites_outputs <- rbind(allsites_outputs,
output_site_case)
}
}
}
allsites_outputs <- data.frame(site = character(), MDT = character(), scenario = character(), extthrs = numeric(), flexthrs = numeric(),
meanrob = numeric(), sdrob = numeric())
rob_scenario <- data.frame(scenario = c("most to least common", "least to most common", "random"),
abbrev = c("RMComm", "RLComm", "RRand"))
site <- sites_names[1]
output_site <- read.csv(file = paste0(DAT_DIR, site, "_Robustness.csv"))
ext_thrs <- unique(output_site$ExtThrs); flex_thrs <- unique(output_site$FlexThrs)
for (ext in ext_thrs){
for (flex in flex_thrs){
index_extflex <- (output_site$ExtThrs == ext) & (output_site$FlexThrs == flex)
for (s in 1:nrow(rob_scenario)){
output_site_case <- data.frame(site = site, MDT = output_site$MDT[1], scenario = rob_scenario$scenario[s],
extthrs = ext, flexthrs = flex, meanrob = NA, sdrob = NA)
meanrob_case <- mean(output_site[index_extflex, as.character(rob_scenario$abbrev[s])])
sdrob_case <- sd(output_site[index_extflex, as.character(rob_scenario$abbrev[s])])
output_site_case$meanrob <- meanrob_case
output_site_case$sdrob <- sdrob_case
allsites_outputs <- rbind(allsites_outputs,
output_site_case)
}
}
}
allsites_outputs
# Mean and standard deviation of robustness calculated for the 30 sites of the landscape project (Univ. of Bristol)
# Created by Alix SAUVE on 4th May 2022
DAT_DIR <- "../outputs/"
robout_files <- list.files(DAT_DIR, pattern = "_Robustness.csv")
sites_names <- unlist(strsplit(robout_files, "_Robustness.csv"))
allsites_outputs <- data.frame(site = character(), MDT = character(), scenario = character(), extthrs = numeric(), flexthrs = numeric(),
meanrob = numeric(), sdrob = numeric())
rob_scenario <- data.frame(scenario = c("most to least common", "least to most common", "random"),
abbrev = c("RMComm", "RLComm", "RRand"))
for (sites in sites_names){
output_site <- read.csv(file = paste0(DAT_DIR, site, "_Robustness.csv"))
ext_thrs <- unique(output_site$ExtThrs); flex_thrs <- unique(output_site$FlexThrs)
for (ext in ext_thrs){
for (flex in flex_thrs){
index_extflex <- (output_site$ExtThrs == ext) & (output_site$FlexThrs == flex)
for (s in 1:nrow(rob_scenario)){
output_site_case <- data.frame(site = site, MDT = output_site$MDT[1], scenario = rob_scenario$scenario[s],
extthrs = ext, flexthrs = flex, meanrob = NA, sdrob = NA)
meanrob_case <- mean(output_site[index_extflex, as.character(rob_scenario$abbrev[s])])
sdrob_case <- sd(output_site[index_extflex, as.character(rob_scenario$abbrev[s])])
output_site_case$meanrob <- meanrob_case
output_site_case$sdrob <- sdrob_case
allsites_outputs <- rbind(allsites_outputs,
output_site_case)
}
}
}
}
head(allsites_outputs)
tail(allsites_outputs)
allsites_outputs <- data.frame(site = character(), MDT = character(), scenario = character(), extthrs = numeric(), flexthrs = numeric(),
meanrob = numeric(), sdrob = numeric())
rob_scenario <- data.frame(scenario = c("most to least common", "least to most common", "random"),
abbrev = c("RMComm", "RLComm", "RRand"))
for (site in sites_names){
output_site <- read.csv(file = paste0(DAT_DIR, site, "_Robustness.csv"))
ext_thrs <- unique(output_site$ExtThrs); flex_thrs <- unique(output_site$FlexThrs)
for (ext in ext_thrs){
for (flex in flex_thrs){
index_extflex <- (output_site$ExtThrs == ext) & (output_site$FlexThrs == flex)
for (s in 1:nrow(rob_scenario)){
output_site_case <- data.frame(site = site, MDT = output_site$MDT[1], scenario = rob_scenario$scenario[s],
extthrs = ext, flexthrs = flex, meanrob = NA, sdrob = NA)
meanrob_case <- mean(output_site[index_extflex, as.character(rob_scenario$abbrev[s])])
sdrob_case <- sd(output_site[index_extflex, as.character(rob_scenario$abbrev[s])])
output_site_case$meanrob <- meanrob_case
output_site_case$sdrob <- sdrob_case
allsites_outputs <- rbind(allsites_outputs,
output_site_case)
}
}
}
}
tail(allsites_outputs)
write.table(allsites_outputs, file = paste0(DAT_DIR, "allsites_robustness_meansd.csv"), quote = FALSE, row.names = FALSE, sep = ",")
layout_matrix <- matrix(c(1, 1, 1, 2, 3, 4), byrow = TRUE, nrow = 2, ncol = 3)
layout(mat = layout_matrix)
rm(list=ls(all=TRUE))
# loading libraries
library(tidyr)
library(AICcmodavg)
library(car)
library(gtools)
library(lme4) # using the same package as for the test on the pollination experiment
library(lmerTest)
SIM_DIR <- "../outputs"
# get the site list
SiteList <- list.files(SIM_DIR, pattern = "csv") # list of csv files (outputs of the robustness analysis)
SiteList <- unlist(strsplit(SiteList, split = "_ExtSeq"))
SiteList <- unique(SiteList[-grep(".csv", SiteList)])
# scenario list
ScenarioList <- c("Random", "LeastComm", "MostComm")
ScenarioCol <- RColorBrewer::brewer.pal(3, "Set1"); names(ScenarioCol) <- ScenarioList
MDT <- data.frame(Site = SiteList, MDT = NA)
layout_matrix <- matrix(c(1, 1, 1, 2, 3, 4), byrow = TRUE, nrow = 2, ncol = 3)
layout(mat = layout_matrix)
par(mar = c(6, 4, 1, 1)); SubPlot <- 1
Ext <- 0.5 ; Flex <- 1
plot(0, 0, type = "n", xlim = c(0, 35), ylim = c(0.2, 1), xlab = NA, ylab = "Robustness", xaxt = "n"); NSite <- 1
axis(1, at = c(1:10, 13:22, 25:34), labels = NA)
text(c(1:10, 13:22, 25:34), rep(0.1, 30), srt = 90, adj = 1, labels = MDT$SiteName[order(MDT$HabNo)], xpd = TRUE, cex = 0.7, srt = 60)
text(c(5.5, 17.5, 29.5), rep(0.25, 3), labels = toupper(paste(MDTTypes, "s", sep = "")))
MDT
MDT$SiteName <- unlist(lapply(strsplit(as.character(MDT$Site), "_"), paste, collapse = " "))
MDT$HabNo <- 1; MDT$HabNo[MDT$MDT == "dyad"] <- 2; MDT$HabNo[MDT$MDT == "triad"] <- 3
layout_matrix <- matrix(c(1, 1, 1, 2, 3, 4), byrow = TRUE, nrow = 2, ncol = 3)
layout(mat = layout_matrix)
par(mar = c(6, 4, 1, 1)); SubPlot <- 1
Ext <- 0.5 ; Flex <- 1
plot(0, 0, type = "n", xlim = c(0, 35), ylim = c(0.2, 1), xlab = NA, ylab = "Robustness", xaxt = "n"); NSite <- 1
axis(1, at = c(1:10, 13:22, 25:34), labels = NA)
text(c(1:10, 13:22, 25:34), rep(0.1, 30), srt = 90, adj = 1, labels = MDT$SiteName[order(MDT$HabNo)], xpd = TRUE, cex = 0.7, srt = 60)
text(c(5.5, 17.5, 29.5), rep(0.25, 3), labels = toupper(paste(MDTTypes, "s", sep = "")))
RobustnessMDT <- data.frame(Site = character(), SimNo = numeric(), RMComm = numeric(), RLComm = numeric(), RRand = numeric()) # robustness data frame
NRep <- max(unique(Robustness$SimNo)) # number of replicates
SiteCol <- RColorBrewer::brewer.pal(10, "Set3")
SiteCol <- RColorBrewer::brewer.pal(10, "Set3")
MDTTypes <- c("monad", "dyad", "triad")
MDT$SiteName <- unlist(lapply(strsplit(as.character(MDT$Site), "_"), paste, collapse = " "))
MDT$HabNo <- 1; MDT$HabNo[MDT$MDT == "dyad"] <- 2; MDT$HabNo[MDT$MDT == "triad"] <- 3
layout_matrix <- matrix(c(1, 1, 1, 2, 3, 4), byrow = TRUE, nrow = 2, ncol = 3)
layout(mat = layout_matrix)
par(mar = c(6, 4, 1, 1)); SubPlot <- 1
Ext <- 0.5 ; Flex <- 1
plot(0, 0, type = "n", xlim = c(0, 35), ylim = c(0.2, 1), xlab = NA, ylab = "Robustness", xaxt = "n"); NSite <- 1
axis(1, at = c(1:10, 13:22, 25:34), labels = NA)
text(c(1:10, 13:22, 25:34), rep(0.1, 30), srt = 90, adj = 1, labels = MDT$SiteName[order(MDT$HabNo)], xpd = TRUE, cex = 0.7, srt = 60)
text(c(5.5, 17.5, 29.5), rep(0.25, 3), labels = toupper(paste(MDTTypes, "s", sep = "")))
RobustnessMDT <- data.frame(Site = character(), SimNo = numeric(), RMComm = numeric(), RLComm = numeric(), RRand = numeric()) # robustness data frame
for (Type in MDTTypes){
Landscapes <- MDT[MDT$MDT == Type, ]
# plot robustness
RobustnessMDTType <- data.frame(Site = character(), SimNo = numeric(), RMComm = numeric(), RLComm = numeric(), RRand = numeric()) # robustness data frame
NCol <- 1
for (Site in Landscapes$Site){
# get the output file
setwd(SIM_DIR)
FileName <- paste(Site, "Robustness.csv", sep = "_")
RobustnessSite <- read.csv(FileName, header = TRUE, stringsAsFactors = FALSE)
RobustnessSite <- subset(RobustnessSite, (ExtThrs == Ext) & (FlexThrs == Flex))
points(rep(NSite, NRep), RobustnessSite$RLComm, pch = 20, col = adjustcolor(SiteCol[NCol], alpha.f = 0.5))
NSite <- NSite + 1; NCol <- NCol + 1
RobustnessMDTType <- rbind(RobustnessMDTType, RobustnessSite)
}
boxplot(RobustnessMDTType$RLComm, col = NA, add = TRUE, at = NSite - 11 / 2, outline = FALSE, boxwex = 20, yaxt = "n")
NSite <- NSite + 2
RobustnessMDT <- rbind(RobustnessMDT, RobustnessMDTType)
}
MDT <- data.frame(Site = SiteList, MDT = NA)
# for each site, identify whether M/D/T
for (Site in SiteList){
setwd(SIM_DIR)
# robustness
# get the output file
FileName <- paste(Site, "Robustness.csv", sep = "_")
Robustness <- read.csv(FileName, header = TRUE, stringsAsFactors = FALSE)
MDT$MDT[MDT$Site == Site] <- unique(Robustness$MDT)
}
MDT$SiteName <- unlist(lapply(strsplit(as.character(MDT$Site), "_"), paste, collapse = " "))
MDT$HabNo <- 1; MDT$HabNo[MDT$MDT == "dyad"] <- 2; MDT$HabNo[MDT$MDT == "triad"] <- 3
pdf(paste(OUT_DIR, "RobustnessComp.pdf", sep = "/"), width = 8, height = 8)
par(mfrow = c(2, 1), mar = c(6, 4, 1, 1)); SubPlot <- 1
Ext <- 0.5
for (Flex in c(0.25, 1)){
plot(0, 0, type = "n", xlim = c(0, 35), ylim = c(0.2, 1), xlab = NA, ylab = "Robustness", xaxt = "n"); NSite <- 1
axis(1, at = c(1:10, 13:22, 25:34), labels = NA)
text(c(1:10, 13:22, 25:34), rep(0.1, 30), srt = 90, adj = 1, labels = MDT$SiteName[order(MDT$HabNo)], xpd = TRUE, cex = 0.7, srt = 60)
text(c(5.5, 17.5, 29.5), rep(0.25, 3), labels = toupper(paste(MDTTypes, "s", sep = "")))
RobustnessMDT <- data.frame(Site = character(), SimNo = numeric(), RMComm = numeric(), RLComm = numeric(), RRand = numeric()) # robustness data frame
for (Type in MDTTypes){
Landscapes <- MDT[MDT$MDT == Type, ]
# plot robustness
RobustnessMDTType <- data.frame(Site = character(), SimNo = numeric(), RMComm = numeric(), RLComm = numeric(), RRand = numeric()) # robustness data frame
NCol <- 1
for (Site in Landscapes$Site){
# get the output file
setwd(SIM_DIR)
FileName <- paste(Site, "Robustness.csv", sep = "_")
RobustnessSite <- read.csv(FileName, header = TRUE, stringsAsFactors = FALSE)
RobustnessSite <- subset(RobustnessSite, (ExtThrs == Ext) & (FlexThrs == Flex))
points(rep(NSite, NRep), RobustnessSite$RLComm, pch = 20, col = adjustcolor(SiteCol[NCol], alpha.f = 0.5))
NSite <- NSite + 1; NCol <- NCol + 1
RobustnessMDTType <- rbind(RobustnessMDTType, RobustnessSite)
}
boxplot(RobustnessMDTType$RLComm, col = NA, add = TRUE, at = NSite - 11 / 2, outline = FALSE, boxwex = 20, yaxt = "n")
NSite <- NSite + 2
RobustnessMDT <- rbind(RobustnessMDT, RobustnessMDTType)
}
legend("topleft", legend = toupper(letters[SubPlot]), bty = "n", cex = 1.5); SubPlot <- SubPlot + 1
RobustnessMDT$MDT <- as.factor(RobustnessMDT$MDT)
print(Flex)
}
NRep <- max(unique(Robustness$SimNo)) # number of replicates
SiteCol <- RColorBrewer::brewer.pal(10, "Set3")
MDTTypes <- c("monad", "dyad", "triad")
par(mfrow = c(2, 1), mar = c(6, 4, 1, 1)); SubPlot <- 1
Ext <- 0.5
for (Flex in c(0.25, 1)){
plot(0, 0, type = "n", xlim = c(0, 35), ylim = c(0.2, 1), xlab = NA, ylab = "Robustness", xaxt = "n"); NSite <- 1
axis(1, at = c(1:10, 13:22, 25:34), labels = NA)
text(c(1:10, 13:22, 25:34), rep(0.1, 30), srt = 90, adj = 1, labels = MDT$SiteName[order(MDT$HabNo)], xpd = TRUE, cex = 0.7, srt = 60)
text(c(5.5, 17.5, 29.5), rep(0.25, 3), labels = toupper(paste(MDTTypes, "s", sep = "")))
RobustnessMDT <- data.frame(Site = character(), SimNo = numeric(), RMComm = numeric(), RLComm = numeric(), RRand = numeric()) # robustness data frame
for (Type in MDTTypes){
Landscapes <- MDT[MDT$MDT == Type, ]
# plot robustness
RobustnessMDTType <- data.frame(Site = character(), SimNo = numeric(), RMComm = numeric(), RLComm = numeric(), RRand = numeric()) # robustness data frame
NCol <- 1
for (Site in Landscapes$Site){
# get the output file
setwd(SIM_DIR)
FileName <- paste(Site, "Robustness.csv", sep = "_")
RobustnessSite <- read.csv(FileName, header = TRUE, stringsAsFactors = FALSE)
RobustnessSite <- subset(RobustnessSite, (ExtThrs == Ext) & (FlexThrs == Flex))
points(rep(NSite, NRep), RobustnessSite$RLComm, pch = 20, col = adjustcolor(SiteCol[NCol], alpha.f = 0.5))
NSite <- NSite + 1; NCol <- NCol + 1
RobustnessMDTType <- rbind(RobustnessMDTType, RobustnessSite)
}
boxplot(RobustnessMDTType$RLComm, col = NA, add = TRUE, at = NSite - 11 / 2, outline = FALSE, boxwex = 20, yaxt = "n")
NSite <- NSite + 2
RobustnessMDT <- rbind(RobustnessMDT, RobustnessMDTType)
}
legend("topleft", legend = toupper(letters[SubPlot]), bty = "n", cex = 1.5); SubPlot <- SubPlot + 1
RobustnessMDT$MDT <- as.factor(RobustnessMDT$MDT)
print(Flex)
}
RobustnessMDT$Site <- as.factor(RobustnessMDT$Site)
RobustnessMDT$MDT <- factor(RobustnessMDT$MDT, levels = c("monad", "dyad", "triad"))
lmeRobustness <- lmer(RLComm ~ MDT + (1 | Site), data = RobustnessMDT)
# in Fig. 3A, FlexThrs = 100%, ExtThres = 0.5
RobustnessMDT_fig3A <- subset(RobustnessMDT, (ExtThrs == 1) & (FlexThrs == 0.5))
lmeRobustness_fig3A <- lmer(RLComm ~ MDT + (1 | Site), data = RobustnessMDT)
lmeRobustness_full <- lmerTest::lmer(RLComm ~ MDT + (1 | Site), data = RobustnessMDT)
lmeRobustness_null <- lmerTest::lmer(RLComm ~ (1 | Site), data = RobustnessMDT)
anova(lmeRobustness_null, lmeRobustness_full)
anova(lmeRobustness_full)
layout_matrix <- matrix(c(1, 1, 1, 2, 3, 4), byrow = TRUE, nrow = 2, ncol = 3)
layout(mat = layout_matrix)
par(mar = c(6, 4, 1, 1)); SubPlot <- 1
Ext <- 0.5 ; Flex <- 1
plot(0, 0, type = "n", xlim = c(0, 35), ylim = c(0.2, 1), xlab = NA, ylab = "Robustness", xaxt = "n"); NSite <- 1
axis(1, at = c(1:10, 13:22, 25:34), labels = NA)
text(c(1:10, 13:22, 25:34), rep(0.1, 30), srt = 90, adj = 1, labels = MDT$SiteName[order(MDT$HabNo)], xpd = TRUE, cex = 0.7, srt = 60)
text(c(5.5, 17.5, 29.5), rep(0.25, 3), labels = toupper(paste(MDTTypes, "s", sep = "")))
RobustnessMDT <- data.frame(Site = character(), SimNo = numeric(), RMComm = numeric(), RLComm = numeric(), RRand = numeric()) # robustness data frame
for (Type in MDTTypes){
Landscapes <- MDT[MDT$MDT == Type, ]
# plot robustness
RobustnessMDTType <- data.frame(Site = character(), SimNo = numeric(), RMComm = numeric(), RLComm = numeric(), RRand = numeric()) # robustness data frame
NCol <- 1
for (Site in Landscapes$Site){
# get the output file
setwd(SIM_DIR)
FileName <- paste(Site, "Robustness.csv", sep = "_")
RobustnessSite <- read.csv(FileName, header = TRUE, stringsAsFactors = FALSE)
RobustnessSite <- subset(RobustnessSite, (ExtThrs == Ext) & (FlexThrs == Flex))
points(rep(NSite, NRep), RobustnessSite$RLComm, pch = 20, col = adjustcolor(SiteCol[NCol], alpha.f = 0.5))
NSite <- NSite + 1; NCol <- NCol + 1
RobustnessMDTType <- rbind(RobustnessMDTType, RobustnessSite)
}
boxplot(RobustnessMDTType$RLComm, col = NA, add = TRUE, at = NSite - 11 / 2, outline = FALSE, boxwex = 20, yaxt = "n")
NSite <- NSite + 2
RobustnessMDT <- rbind(RobustnessMDT, RobustnessMDTType)
}
legend("topleft", legend = toupper(letters[SubPlot]), bty = "n", cex = 1.5); SubPlot <- SubPlot + 1
RobustnessMDT$MDT <- as.factor(RobustnessMDT$MDT)
leveneTest(RLComm ~ MDT, data = RobustnessMDT)
for (Type in MDTTypes){
print(c(Flex, Type, IQR(RobustnessMDT$RLComm[RobustnessMDT$MDT == Type])))
}
for (Ext in c(0.25, 0.5, 0.75)){
BFTest <- data.frame(FlexThrs = c(0, 0.25, 0.5, 1), Fstat_LComm = numeric(4), pValue_LComm = NA,
Fstat_Rand = numeric(4), pValue_Rand = NA)
for (Flex in c(0, 0.25, 0.5, 1)){
RobustnessMDT <- data.frame(Site = character(), SimNo = numeric(), RMComm = numeric(), RLComm = numeric(), RRand = numeric()) # robustness data frame
for (Type in MDTTypes){
Landscapes <- MDT[MDT$MDT == Type, ]
# plot robustness
RobustnessMDTType <- data.frame(Site = character(), SimNo = numeric(), RMComm = numeric(), RLComm = numeric(), RRand = numeric()) # robustness data frame
NCol <- 1
for (Site in Landscapes$Site){
# get the output file
setwd(SIM_DIR)
FileName <- paste(Site, "Robustness.csv", sep = "_")
RobustnessSite <- read.csv(FileName, header = TRUE, stringsAsFactors = FALSE)
RobustnessSite <- subset(RobustnessSite, (ExtThrs == Ext) & (FlexThrs == Flex))
RobustnessMDTType <- rbind(RobustnessMDTType, RobustnessSite)
}
RobustnessMDT <- rbind(RobustnessMDT, RobustnessMDTType)
}
BFTestExtFlex_LComm <- leveneTest(RLComm ~ MDT, data = RobustnessMDT)
BFTest$Fstat_LComm[BFTest$FlexThrs == Flex] <- BFTestExtFlex_LComm$`F value`[1]
BFTest$pValue_LComm[BFTest$FlexThrs == Flex] <- stars.pval(BFTestExtFlex_LComm$`Pr(>F)`[1])[1]
BFTestExtFlex_Rand <- leveneTest(RRand ~ MDT, data = RobustnessMDT)
BFTest$Fstat_Rand[BFTest$FlexThrs == Flex] <-  BFTestExtFlex_Rand$`F value`[1]
BFTest$pValue_Rand[BFTest$FlexThrs == Flex] <- stars.pval(BFTestExtFlex_Rand$`Pr(>F)`[1])[1]
}
plot(BFTest$Fstat_LComm ~ BFTest$FlexThrs, ylim = c(1, 1500), xlab = "Diet flexibility", ylab = "Brown–Forsythe test statistic", pch = 15)
lines(BFTest$Fstat_LComm ~ BFTest$FlexThrs) ; text(BFTest$FlexThrs, BFTest$Fstat_LComm + 50 , labels = BFTest$pValue_LComm)
points(BFTest$Fstat_Rand ~ BFTest$FlexThrs, pch = 20) ; lines(BFTest$Fstat_Rand ~ BFTest$FlexThrs, lty = 2)
text(BFTest$FlexThrs, BFTest$Fstat_Rand + 50 , labels = BFTest$pValue_Rand)
legend("topleft", legend = toupper(letters[SubPlot]), bty = "n") ; SubPlot <- SubPlot + 1
}
par(mfrow = c(3, 4), mar = c(6, 4, 1, 1)); SubPlot <- 1
Subplot <- 1
for (Ext in c(0.25, 0.5, 0.75)){
for (Flex in c(0, 0.25, 0.5, 1)){
plot(0, 0, type = "n", xlim = c(0, 35), ylim = c(0.2, 1), xlab = NA, ylab = "Robustness", xaxt = "n"); NSite <- 1
axis(1, at = c(1:10, 13:22, 25:34), labels = NA)
text(c(1:10, 13:22, 25:34), rep(0.1, 30), srt = 90, adj = 1, labels = MDT$SiteName[order(MDT$HabNo)], xpd = TRUE, cex = 0.7, srt = 60)
text(c(5.5, 17.5, 29.5), rep(0.25, 3), labels = toupper(paste(MDTTypes, "s", sep = "")))
RobustnessMDT <- data.frame(Site = character(), SimNo = numeric(), RMComm = numeric(), RLComm = numeric(), RRand = numeric()) # robustness data frame
for (Type in MDTTypes){
Landscapes <- MDT[MDT$MDT == Type, ]
# plot robustness
RobustnessMDTType <- data.frame(Site = character(), SimNo = numeric(), RMComm = numeric(), RLComm = numeric(), RRand = numeric()) # robustness data frame
NCol <- 1
for (Site in Landscapes$Site){
# get the output file
setwd(SIM_DIR)
FileName <- paste(Site, "Robustness.csv", sep = "_")
RobustnessSite <- read.csv(FileName, header = TRUE, stringsAsFactors = FALSE)
RobustnessSite <- subset(RobustnessSite, (ExtThrs == Ext) & (FlexThrs == Flex))
points(rep(NSite, NRep), RobustnessSite$RRand, pch = 20, col = adjustcolor(SiteCol[NCol], alpha.f = 0.5))
NSite <- NSite + 1; NCol <- NCol + 1
RobustnessMDTType <- rbind(RobustnessMDTType, RobustnessSite)
}
boxplot(RobustnessMDTType$RRand, col = NA, add = TRUE, at = NSite - 11 / 2, outline = FALSE, boxwex = 20, yaxt = "n")
NSite <- NSite + 2
RobustnessMDT <- rbind(RobustnessMDT, RobustnessMDTType)
}
legend("topleft", legend = toupper(letters[Subplot]), bty = "n")
Subplot <- Subplot + 1
}
}
head(RobustnessMDT)
